eval "$(rbenv init -)"

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
export CMS_PATH=~/git/work/CMS

export XDG_CONFIG_HOME=~/.config

# MacPorts Installer addition on 2013-08-21_at_23:34:01: adding an appropriate PATH variable for use with MacPorts.
export PATH=/usr/local/bin:/opt/local/bin:/opt/local/sbin:/usr/local/opt/mysql\@5.7/bin:$PATH
# Finished adapting your PATH environment variable for use with MacPorts.
export PATH=$HOME/tools/platform-tools:$HOME/tools/android-sdk-macosx/tools:$HOME/.nodebrew/current/bin:$PATH

alias su='sudo bash --rcfile /var/root/.bashrc'
alias ll='ls -l'
alias lla='ls -la'
alias l='ls -a'
alias vim='nvim'
alias be='bundle exec'
alias vim='nvim'
alias tailf='tail -f'
alias gco="git branch -a --sort=-authordate | grep -v -e '->' -e '*' | perl -pe 's/^\h+//g' | perl -pe 's#^remotes/origin/###' | sort | uniq | peco | xargs git checkout"
alias gcob="git branch -a --sort=-authordate | grep -v -e '->' -e '*' | perl -pe 's/^\h+//g' | perl -pe 's#^remotes/origin/###' | sort | uniq | peco | xargs git checkout -b"
#pushd, popd
#alias cd='pushd'
#alias p='popd'
#alias flush="dirs -c"

# add color for ls
export CLICOLORS=1
export LSCOLORS=Bxcxcxdxbxegedabagacad
alias ls='ls -G'

# add color for grep
export eREP_OPTIONS='--color=auto'

# JAVA
export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF-8
export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
export MAVEN_HOME=/Users/akiho/maven/bin

# terminal settings
source ~/.git-completion.bash
source ~/.git-prompt.sh
GIT_PS1_SHOWDIRTYSTATE=true
export PS1="\[\033[32m\]\u@\[\033[32m\]\h \[\033[34m\]\W\[\033[31m\]$(__git_ps1) \[\033[00m\]\$ "

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

# Golang
export GOENV_ROOT="$HOME/.goenv"
export PATH="$GOENV_ROOT/bin:$PATH"
export GOROOT=$HOME/.goenv/shims/
export GOPATH=$HOME/go
eval "$(goenv init -)"
export PATH=$GOPATH/bin:$GOROOT:$PATH

# PostgreSQL
export PATH=/usr/local/Cellar/postgresql/11.1_1/bin:$PATH
export PGDATA=/usr/local/var/postgres

# direnv
eval "$(direnv hook bash)"

###-begin-ng-completion### 
#
# ng command completion script
#
# Installation: ng completion >> ~/.bashrc (or ~/.zshrc)
#

ng_opts='new init build serve generate autocomplete e2e format lint test version'
init_opts='--dry-run --verbose --blueprint --skip-npm --skip-bower --name'
new_opts='--dry-run --verbose --blueprint --skip-npm --skip-bower --skip-git --directory'
build_opts='--environment --output-path --watch --watcher'
serve_opts='--port --host --proxy --insecure-proxy --watcher --live-reload --live-reload-host
            --live-reload-port --environment --output-path --ssl --ssl-key --ssl-cert'
generate_opts='component directive pipe route service'
test_opts='--watch --browsers --colors --log-level --port --reporters'

if type complete &>/dev/null; then
  _ng_completion() {
    local cword pword opts

    COMPREPLY=()
    cword=${COMP_WORDS[COMP_CWORD]}
    pword=${COMP_WORDS[COMP_CWORD - 1]}

    case ${pword} in
      ng) opts=$ng_opts ;;
      i|init) opts=$init_opts ;;
      new) opts=$new_opts ;;
      b|build) opts=$build_opts ;;
      s|serve|server) opts=$serve_opts ;;
      g|generate) opts=$generate_opts ;;
      test) opts=$test_opts ;;
    esac

    COMPREPLY=( $(compgen -W '${opts}' -- $cword) )

    return 0
  }
  complete -o default -F _ng_completion ng
elif type compctl &>/dev/null; then
  _ng_completion () {
    local words cword opts
    read -Ac words
    read -cn cword
    let cword-=1

    case $words[cword] in
      ng) opts=$ng_opts ;;
      i|init) opts=$init_opts ;;
      new) opts=$new_opts ;;
      b|build) opts=$build_opts ;;
      s|serve|server) opts=$serve_opts ;;
      g|generate) opts=$generate_opts ;;
      test) opts=$test_opts ;;
    esac
    
    setopt shwordsplit
    reply=($opts)
    unset shwordsplit
  }
  compctl -K _ng_completion ng
fi
###-end-ng-completion###
eval "$(direnv hook bash)"

test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

# isucon
export SLACK_WEBHOOK_URL="https://hooks.slack.com/services/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"

# graalvm
export GRAALVM_HOME=/Library/Java/JavaVirtualMachines/graalvm-ce-java8-19.3.0/Contents/Home

