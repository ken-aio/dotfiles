[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]] # カーソル位置のコンテキストのftを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

# for vim
# http://qiita.com/tekkoc/items/98adcadfa4bdc8b5a6ca
[[plugins]]
repo = 'kana/vim-submode'

# 静的解析
[[plugins]]
repo = 'scrooloose/syntastic'

# ドキュメント参照
[[plugins]]
repo = 'thinca/vim-ref'

[[plugins]]
repo = 'yuku-t/vim-ref-ri'

# ==========================================================
# ruby / rails
# ==========================================================
[[plugins]]
repo = 'tpope/vim-rails'
on_ft = 'rb'

[[plugins]]
repo = 'basyura/unite-rails'
on_ft = 'rb'

[[plugins]]
repo = 'osyo-manga/vim-monster'
on_ft = 'rb'

[[plugins]]
repo = 'astashov/vim-ruby-debugger'
on_ft = 'rb'

[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_ft = 'rb'

# ==========================================================
# Utils
# ==========================================================
# 自動で閉じる
[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'

[[plugins]]
repo = 'airblade/vim-gitgutter'

# denite
[[plugins]]
repo = 'Shougo/denite.nvim'

# view setting
[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['tagbar', 'vim-fugitive']
hook_add = '''
source ~/.config/nvim/plugins/airline.rc.vim
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
depends = 'vim-airline'
hook_add = '''
let g:airline_theme='luna'
'''

# vim git
[[plugins]]
repo = 'tpope/vim-fugitive'

# ==========================================================
# Golang
# ==========================================================
[[plugins]]
repo = 'prabirshrestha/async.vim'

#[[plugins]]
#Repo = 'prabirshrestha/vim-lsp'

# Go settings
[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]]
repo = 'zchee/vim-goiferr'
if = "has('nvim')"
on_ft = 'go'
hook_add = '''
'''

# ==========================================================
# terminal
# ==========================================================
[[plugins]]
repo = 'kassio/neoterm'
if = "has('nvim')"
hook_add = '''
nnoremap <silent> ,rc :TREPLSendFile<cr>
nnoremap <silent> ,rl :TREPLSendLine<cr>
vnoremap <silent> ,rl :TREPLSendSelection<cr>
nnoremap <silent> vt :Ttoggle<cr>
nnoremap <silent> vs :terminal<cr>
'''

# ==========================================================
# Markdown
# ==========================================================
[[plugins]]
repo = 'godlygeek/tabular'
on_ft = 'md'

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = 'md'
depends = ['tabular']
hook_add = '''
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_auto_insert_bullets = 0
let g:vim_markdown_new_list_item_indent = 0
'''

# ==========================================================
# GraphQL
# ==========================================================
[[plugins]]
repo = 'jparise/vim-graphql'
on_ft = 'graphql'


# ==========================================================
# Auto complete
# ==========================================================
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <expr><TAB>
 \ pumvisible() ? "\<C-n>" :
 \ neosnippet#expandable_or_jumpable() ?
 \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" For conceal markers.
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif
" Set the path to our snippets
let g:neosnippet#snippets_directory='~/.config/nvim/snippets'
'''
on_i  = 1
depends = ['neosnippet-snippets']
